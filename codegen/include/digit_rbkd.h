/* This file was automatically generated by CasADi 3.6.4.
 *  It consists of: 
 *   1) content generated by CasADi runtime: not copyrighted
 *   2) template code copied from CasADi source: permissively licensed (MIT-0)
 *   3) user code: owned by the user
 *
 */
#ifndef casadi_real
#define casadi_real double
#endif

#ifndef casadi_int
#define casadi_int long long int
#endif

#include <Eigen/Dense>
extern "C" int forward_kinematics(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem);
extern "C" int forward_kinematics_alloc_mem(void);
extern "C" int forward_kinematics_init_mem(int mem);
extern "C" void forward_kinematics_free_mem(int mem);
extern "C" int forward_kinematics_checkout(void);
extern "C" void forward_kinematics_release(int mem);
extern "C" void forward_kinematics_incref(void);
extern "C" void forward_kinematics_decref(void);
extern "C" casadi_int forward_kinematics_n_in(void);
extern "C" casadi_int forward_kinematics_n_out(void);
extern "C" casadi_real forward_kinematics_default_in(casadi_int i);
extern "C" const char* forward_kinematics_name_in(casadi_int i);
extern "C" const char* forward_kinematics_name_out(casadi_int i);
extern "C" const casadi_int* forward_kinematics_sparsity_in(casadi_int i);
extern "C" const casadi_int* forward_kinematics_sparsity_out(casadi_int i);
extern "C" int forward_kinematics_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
#define forward_kinematics_SZ_ARG 1
#define forward_kinematics_SZ_RES 2
#define forward_kinematics_SZ_IW 0
#define forward_kinematics_SZ_W 64
extern "C" void forward_kinematics_eigen(const Eigen::Matrix<casadi_real,37,1> &i0,
				Eigen::Matrix<casadi_real,3,3> &o0, 
				Eigen::Matrix<casadi_real,3,1> &o1);
extern "C" int joint_space_inertia_matrix(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem);
extern "C" int joint_space_inertia_matrix_alloc_mem(void);
extern "C" int joint_space_inertia_matrix_init_mem(int mem);
extern "C" void joint_space_inertia_matrix_free_mem(int mem);
extern "C" int joint_space_inertia_matrix_checkout(void);
extern "C" void joint_space_inertia_matrix_release(int mem);
extern "C" void joint_space_inertia_matrix_incref(void);
extern "C" void joint_space_inertia_matrix_decref(void);
extern "C" casadi_int joint_space_inertia_matrix_n_in(void);
extern "C" casadi_int joint_space_inertia_matrix_n_out(void);
extern "C" casadi_real joint_space_inertia_matrix_default_in(casadi_int i);
extern "C" const char* joint_space_inertia_matrix_name_in(casadi_int i);
extern "C" const char* joint_space_inertia_matrix_name_out(casadi_int i);
extern "C" const casadi_int* joint_space_inertia_matrix_sparsity_in(casadi_int i);
extern "C" const casadi_int* joint_space_inertia_matrix_sparsity_out(casadi_int i);
extern "C" int joint_space_inertia_matrix_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
#define joint_space_inertia_matrix_SZ_ARG 1
#define joint_space_inertia_matrix_SZ_RES 1
#define joint_space_inertia_matrix_SZ_IW 0
#define joint_space_inertia_matrix_SZ_W 861
extern "C" void joint_space_inertia_matrix_eigen(const Eigen::Matrix<casadi_real,37,1> &i0,
				Eigen::Matrix<casadi_real,36,36> &o0);
